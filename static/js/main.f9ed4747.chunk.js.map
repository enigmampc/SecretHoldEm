{"version":3,"sources":["App.js","../node_modules/react-casino/dist/assets/png/cards sync /^/.//.*/.png$","../node_modules/react-casino/dist/assets/png/chips sync /^/.//.*/.png$","../node_modules/react-casino/dist/assets/png/textures sync /^/.//.*/.png$","serviceWorker.js","index.js"],"names":["PokerSolver","require","Hand","nf","Intl","NumberFormat","emptyState","game_address","all_rooms","community_cards","my_hand","player_a_hand","player_b_hand","player_a","player_a_bet","player_a_wallet","player_b","player_b_bet","player_b_wallet","stage","turn","new_room_name","createLoading","joinLoading","checkLoading","callLoading","raiseLoading","raiseAmount","rematchLoading","player_a_wants_rematch","player_b_wants_rematch","player_a_win_counter","player_b_win_counter","tie_counter","App","props","state","Object","assign","window","location","hash","replace","onhashchange","a","setState","mnemonic","localStorage","getItem","bip39","setItem","tx_encryption_seed","Uint8Array","from","JSON","parse","SecretJS","GenerateNewSeed","fromMnemonic","signingPen","myWalletAddress","pubkey","secretJsClient","signBytes","sign","init","amount","denom","gas","exec","this","refreshAllRooms","console","log","getContracts","data","setTimeout","setInterval","refreshMyHand","stringify","secret","queryContractSmart","get_my_hand","refreshMyWalletBalance","getAccount","myWalletBalance","format","balance","href","rel","target","refreshTableStateInterval","refreshTableState","get_public_data","length","concat","slice","starter","last_play","instantiate","seed","Buffer","readUInt32BE","execute","join","foldLoading","fold","check","call","raise","rematch","player","address","bet","wallet","wants_rematch","style","color","position","top","left","padding","zIndex","textAlign","Input","placeholder","value","onChange","_","loading","disabled","onClick","createRoom","bind","map","r","i","key","label","handA","stateCardToPokerSoverCard","filter","x","rankHandA","getMe","solve","descr","e","handB","rankHandB","includes","winner","isLoading","joinRoom","turnDirection","lastPlay","match","room","right","width","c","stateCardToReactCard","marginRight","marginLeft","hidden","bottom","className","cards","getOther","min","max","v","React","Component","component","index","suit","Spade","Club","Heart","Diamond","face","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","Ace","type","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","module","exports","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9ed4747.chunk.js","sourcesContent":["import React from \"react\";\nimport * as SecretJS from \"secretjs\";\nimport * as bip39 from \"bip39\";\nimport { Hand, Table, Card } from \"react-casino\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport Slider from \"rc-slider\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\n\nconst PokerSolver = require(\"pokersolver\").Hand;\n\nconst nf = new Intl.NumberFormat();\nconst codeId = 1;\nconst refreshTableStateInterval = 1000;\n\nconst emptyState = {\n  game_address: \"\",\n  all_rooms: [],\n  community_cards: [],\n  my_hand: [{}, {}],\n  player_a_hand: [{}, {}],\n  player_b_hand: [{}, {}],\n  player_a: \"\",\n  player_a_bet: 0,\n  player_a_wallet: 0,\n  player_b: \"\",\n  player_b_bet: 0,\n  player_b_wallet: 0,\n  stage: \"\",\n  turn: \"\",\n  new_room_name: \"\",\n  createLoading: false,\n  joinLoading: false,\n  checkLoading: false,\n  callLoading: false,\n  raiseLoading: false,\n  raiseAmount: 25000,\n  rematchLoading: false,\n  player_a_wants_rematch: false,\n  player_b_wants_rematch: false,\n  player_a_win_counter: 0,\n  player_b_win_counter: 0,\n  tie_counter: 0,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = Object.assign({}, emptyState, {\n      game_address: window.location.hash.replace(\"#\", \"\"),\n    });\n  }\n\n  async componentDidMount() {\n    window.onhashchange = async () => {\n      this.setState(\n        Object.assign({}, emptyState, {\n          game_address: window.location.hash.replace(\"#\", \"\"),\n        })\n      );\n    };\n\n    let mnemonic = localStorage.getItem(\"mnemonic\");\n    if (!mnemonic) {\n      mnemonic = bip39.generateMnemonic();\n      localStorage.setItem(\"mnemonic\", mnemonic);\n    }\n\n    let tx_encryption_seed = localStorage.getItem(\"tx_encryption_seed\");\n    if (tx_encryption_seed) {\n      tx_encryption_seed = Uint8Array.from(\n        JSON.parse(`[${tx_encryption_seed}]`)\n      );\n    } else {\n      tx_encryption_seed = SecretJS.EnigmaUtils.GenerateNewSeed();\n      localStorage.setItem(\"tx_encryption_seed\", tx_encryption_seed);\n    }\n\n    const signingPen = await SecretJS.Secp256k1Pen.fromMnemonic(mnemonic);\n    const myWalletAddress = SecretJS.pubkeyToAddress(\n      SecretJS.encodeSecp256k1Pubkey(signingPen.pubkey),\n      \"secret\"\n    );\n    const secretJsClient = new SecretJS.SigningCosmWasmClient(\n      \"https://bootstrap.pub.testnet.enigma.co\",\n      myWalletAddress,\n      (signBytes) => signingPen.sign(signBytes),\n      tx_encryption_seed,\n      {\n        init: {\n          amount: [{ amount: \"0\", denom: \"uscrt\" }],\n          gas: \"500000\",\n        },\n        exec: {\n          amount: [{ amount: \"0\", denom: \"uscrt\" }],\n          gas: \"500000\",\n        },\n      }\n    );\n\n    this.setState({ secretJsClient, myWalletAddress, mnemonic });\n\n    const refreshAllRooms = async () => {\n      if (window.location.hash !== \"\") {\n        return;\n      }\n\n      try {\n        console.log(\"refreshAllRooms\");\n        const data = await secretJsClient.getContracts(codeId);\n\n        this.setState({\n          all_rooms: data,\n        });\n      } catch (e) {\n        console.log(\"refreshAllRooms\", e);\n      }\n    };\n    setTimeout(refreshAllRooms, 0);\n    setInterval(refreshAllRooms, refreshTableStateInterval);\n\n    const refreshMyHand = async () => {\n      if (window.location.hash === \"\") {\n        return;\n      }\n\n      if (!this.state.player_a || !this.state.player_b) {\n        return;\n      }\n\n      if (\n        this.state.player_a !== this.state.myWalletAddress &&\n        this.state.player_b !== this.state.myWalletAddress\n      ) {\n        return;\n      }\n\n      if (\n        JSON.stringify(this.state.my_hand) !== JSON.stringify([{}, {}]) &&\n        this.state.stage !== \"PreFlop\"\n      ) {\n        // this should work because when switching room (= switching hash location)\n        // we set an empty state\n        return;\n      }\n\n      const secret = +localStorage.getItem(this.state.game_address);\n      try {\n        console.log(\"refreshMyHand\");\n\n        const data = await secretJsClient.queryContractSmart(\n          this.state.game_address,\n          { get_my_hand: { secret } }\n        );\n\n        this.setState({\n          my_hand: data,\n        });\n\n        if (this.state.myWalletAddress === this.state.player_a) {\n          this.setState({\n            player_a_hand: this.state.my_hand,\n          });\n        } else if (this.state.myWalletAddress === this.state.player_b) {\n          this.setState({\n            player_b_hand: this.state.my_hand,\n          });\n        }\n      } catch (e) {\n        console.log(\"refreshMyHand\", e);\n      }\n    };\n    setTimeout(refreshMyHand, 0);\n    setInterval(refreshMyHand, refreshTableStateInterval);\n\n    const refreshMyWalletBalance = async () => {\n      try {\n        console.log(\"refreshMyWalletBalance\");\n\n        const data = await secretJsClient.getAccount(myWalletAddress);\n\n        if (!data) {\n          this.setState({\n            myWalletBalance: (\n              <span>\n                (No funds - Go get some{\" \"}\n                <a\n                  href=\"https://faucet.pub.testnet.enigma.co\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  from the faucet\n                </a>\n                )\n              </span>\n            ),\n          });\n        } else {\n          this.setState({\n            myWalletBalance: `(${nf.format(\n              +data.balance[0].amount / 1000000\n            )} SCRT)`,\n          });\n        }\n      } catch (e) {\n        console.log(\"refreshMyWalletBalance\", e);\n      }\n    };\n    setTimeout(refreshMyWalletBalance, 0);\n    setInterval(refreshMyWalletBalance, refreshTableStateInterval * 5);\n\n    const refreshTableState = async () => {\n      if (window.location.hash === \"\") {\n        return;\n      }\n\n      try {\n        console.log(\"refreshTableState\");\n\n        const data = await secretJsClient.queryContractSmart(\n          this.state.game_address,\n          { get_public_data: {} }\n        );\n\n        if (data.player_a_hand.length === 0) {\n          data.player_a_hand = [{}, {}];\n        }\n        if (data.player_b_hand.length === 0) {\n          data.player_b_hand = [{}, {}];\n        }\n\n        if (this.state.myWalletAddress === data.player_a) {\n          this.setState({\n            player_a_hand: this.state.my_hand,\n            player_b_hand: data.player_b_hand,\n          });\n        } else if (this.state.myWalletAddress === data.player_b) {\n          this.setState({\n            player_a_hand: data.player_a_hand,\n            player_b_hand: this.state.my_hand,\n          });\n        } else {\n          this.setState({\n            player_a_hand: data.player_a_hand,\n            player_b_hand: data.player_b_hand,\n          });\n        }\n\n        this.setState({\n          community_cards: data.community_cards\n            .concat([{}, {}, {}, {}, {}])\n            .slice(0, 5),\n          player_a: data.player_a,\n          player_a_bet: data.player_a_bet,\n          player_a_wallet: data.player_a_wallet,\n          player_b: data.player_b,\n          player_b_bet: data.player_b_bet,\n          player_b_wallet: data.player_b_wallet,\n          stage: data.stage,\n          starter: data.starter,\n          turn: data.turn,\n          last_play: data.last_play,\n          player_a_wants_rematch: data.player_a_wants_rematch,\n          player_b_wants_rematch: data.player_b_wants_rematch,\n\n          player_a_win_counter: data.player_a_win_counter,\n          player_b_win_counter: data.player_b_win_counter,\n          tie_counter: data.tie_counter,\n        });\n      } catch (e) {\n        console.log(\"refreshTableState\", e);\n      }\n    };\n\n    setTimeout(refreshTableState, 0);\n    setInterval(refreshTableState, refreshTableStateInterval);\n  }\n\n  async createRoom() {\n    this.setState({ createLoading: true });\n    try {\n      await this.state.secretJsClient.instantiate(\n        codeId,\n        {},\n        this.state.new_room_name\n      );\n    } catch (e) {\n      console.log(\"createRoom\", e);\n    }\n    setTimeout(\n      () => this.setState({ new_room_name: \"\", createLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async joinRoom() {\n    if (!this.state.game_address) {\n      // ah?\n      return;\n    }\n\n    this.setState({ joinLoading: true });\n\n    let secret = +localStorage.getItem(this.state.game_address);\n    if (!secret) {\n      const seed = SecretJS.EnigmaUtils.GenerateNewSeed();\n      secret = Buffer.from(seed.slice(0, 8)).readUInt32BE(0); // 64 bit\n    }\n    localStorage.setItem(this.state.game_address, secret);\n\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        join: { secret },\n      });\n    } catch (e) {\n      console.log(\"join\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ joinLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async fold() {\n    this.setState({ foldLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        fold: {},\n      });\n    } catch (e) {\n      console.log(\"fold\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ foldLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async check() {\n    this.setState({ checkLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        check: {},\n      });\n    } catch (e) {\n      console.log(\"check\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ checkLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async call() {\n    this.setState({ callLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        call: {},\n      });\n    } catch (e) {\n      console.log(\"call\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ callLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async raise() {\n    this.setState({ raiseLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        raise: { amount: this.state.raiseAmount },\n      });\n    } catch (e) {\n      console.log(\"raise\", e);\n    }\n    setTimeout(\n      () => this.setState({ raiseLoading: false, raiseAmount: 25000 }),\n      refreshTableStateInterval\n    );\n  }\n\n  async rematch() {\n    this.setState({ rematchLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        rematch: {},\n      });\n    } catch (e) {\n      console.log(\"rematch\", e);\n    }\n    setTimeout(\n      () => this.setState({ rematchLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  getMe() {\n    if (!this.state.myWalletAddress) {\n      return null;\n    }\n\n    if (this.state.myWalletAddress === this.state.player_a) {\n      return {\n        player: \"A\",\n        address: this.state.player_a,\n        bet: this.state.player_a_bet,\n        wallet: this.state.player_a_wallet,\n        wants_rematch: this.state.player_a_wants_rematch,\n      };\n    }\n\n    if (this.state.myWalletAddress === this.state.player_b) {\n      return {\n        player: \"B\",\n        address: this.state.player_b,\n        bet: this.state.player_b_bet,\n        wallet: this.state.player_b_wallet,\n        wants_rematch: this.state.player_b_wants_rematch,\n      };\n    }\n\n    return null;\n  }\n\n  getOther() {\n    if (!this.state.myWalletAddress) {\n      return null;\n    }\n\n    if (this.state.myWalletAddress !== this.state.player_a) {\n      return {\n        player: \"A\",\n        address: this.state.player_a,\n        bet: this.state.player_a_bet,\n        wallet: this.state.player_a_wallet,\n        wants_rematch: this.state.player_a_wants_rematch,\n      };\n    }\n\n    if (this.state.myWalletAddress !== this.state.player_b) {\n      return {\n        player: \"B\",\n        address: this.state.player_b,\n        bet: this.state.player_b_bet,\n        wallet: this.state.player_b_wallet,\n        wants_rematch: this.state.player_b_wants_rematch,\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    if (window.location.hash === \"\") {\n      return (\n        <div style={{ color: \"white\" }}>\n          <Table>\n            {/* wallet */}\n            <div\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                padding: 10,\n              }}\n            >\n              <div\n                style={{\n                  position: \"relative\",\n                  zIndex: 9999,\n                }}\n              >\n                You: {this.state.myWalletAddress} {this.state.myWalletBalance}\n              </div>\n            </div>\n            <div\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                }}\n              >\n                <Form.Input\n                  placeholder=\"Room name\"\n                  value={this.state.new_room_name}\n                  onChange={(_, { value }) =>\n                    this.setState({ new_room_name: value })\n                  }\n                />\n                <Button\n                  loading={this.state.createLoading}\n                  disabled={this.state.createLoading}\n                  onClick={this.createRoom.bind(this)}\n                >\n                  Create!\n                </Button>\n              </div>\n              <br />\n              <center>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Room Name</th>\n                      <th>Address</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.all_rooms.map((r, i) => (\n                      <tr key={i}>\n                        <td>{r.label}</td>\n                        <td>\n                          <a href={\"#\" + r.address}>{r.address}</a>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </center>\n            </div>\n          </Table>\n        </div>\n      );\n    }\n\n    const handA = this.state.player_a_hand\n      .concat(this.state.community_cards)\n      .map(stateCardToPokerSoverCard)\n      .filter((x) => x);\n    let rankHandA = \"Unknown\";\n    if (handA.length > 5 || (this.getMe() && this.getMe().player == \"A\")) {\n      try {\n        const solve = PokerSolver.solve(handA);\n        rankHandA = solve.descr;\n      } catch (e) {}\n    }\n\n    const handB = this.state.player_b_hand\n      .concat(this.state.community_cards)\n      .map(stateCardToPokerSoverCard)\n      .filter((x) => x);\n    let rankHandB = \"Unknown\";\n    if (handB.length > 5 || (this.getMe() && this.getMe().player == \"B\")) {\n      try {\n        const solve = PokerSolver.solve(handB);\n        rankHandB = solve.descr;\n      } catch (e) {}\n    }\n\n    let stage = this.state.stage;\n    if (stage.includes(\"EndedWinner\")) {\n      const winner = stage.replace(\"EndedWinner\", \"\");\n      stage = (\n        <span>\n          <div>\n            <b>Player {winner} Wins!</b>\n          </div>\n\n          {typeof this.state.last_play === \"string\" &&\n          !this.state.last_play.includes(\"fold\") ? (\n            rankHandA !== rankHandB ? (\n              <div>\n                <b>{winner === \"A\" ? rankHandA : rankHandB}</b> vs. a lousy{\" \"}\n                <b>{winner === \"A\" ? rankHandB : rankHandA}</b>\n              </div>\n            ) : (\n              <div>\n                Both with <b>{rankHandA}</b>, {winner} won with a kicker!\n              </div>\n            )\n          ) : null}\n        </span>\n      );\n    } else if (stage.includes(\"EndedDraw\")) {\n      stage = `It's a Tie of ${rankHandA}!`;\n    } else if (stage === \"WaitingForPlayersToJoin\") {\n      const isLoading =\n        this.state.joinLoading ||\n        this.getMe() ||\n        (this.state.myWalletBalance &&\n          typeof this.state.myWalletBalance === \"string\" &&\n          !this.state.myWalletBalance.includes(\"SCRT\"));\n      stage = (\n        <span>\n          <div>Waiting for players</div>\n          <Button\n            loading={isLoading}\n            disabled={isLoading}\n            onClick={this.joinRoom.bind(this)}\n          >\n            Join\n          </Button>\n        </span>\n      );\n    } else if (stage) {\n      stage += \" betting round\";\n    }\n\n    let turn = \"Player A\";\n    let turnDirection = \"->\";\n    let lastPlay = this.state.last_play || \"\";\n    if (this.state.turn === this.state.player_b) {\n      turn = \"Player B\";\n      turnDirection = \"<-\";\n    }\n    turn = \"Turn: \" + turn;\n    if (\n      !this.state.stage ||\n      !this.state.turn ||\n      this.state.stage.includes(\"Ended\") ||\n      this.state.stage.includes(\"Waiting\")\n    ) {\n      turn = \"\";\n      turnDirection = \"\";\n      lastPlay = \"\";\n    }\n    if (typeof this.state.last_play === \"string\") {\n      if (this.state.last_play.includes(\"fold\")) {\n        lastPlay = this.state.last_play;\n      } else if (this.state.last_play.includes(\"raised\")) {\n        try {\n          const amount = +this.state.last_play.match(/\\d+/g)[0];\n          lastPlay = this.state.last_play.replace(\n            `${amount}`,\n            nf.format(amount)\n          );\n        } catch (e) {}\n      }\n    }\n\n    let rematch = null;\n    if (\n      typeof this.state.stage === \"string\" &&\n      this.state.stage.includes(\"Ended\")\n    ) {\n      rematch = (\n        <div>\n          {this.getMe() ? (\n            <Button\n              loading={this.state.rematchLoading || this.getMe().wants_rematch}\n              onClick={this.rematch.bind(this)}\n              disabled={this.state.rematchLoading || this.getMe().wants_rematch}\n            >\n              Rematch!\n            </Button>\n          ) : null}\n          {this.state.player_a_wants_rematch ? (\n            <div style={{ padding: 10 }}>Rematch: Waiting for player B.</div>\n          ) : null}\n          {this.state.player_b_wants_rematch ? (\n            <div style={{ padding: 10 }}>Rematch: Waiting for player A.</div>\n          ) : null}\n        </div>\n      );\n    }\n\n    let room = \"\";\n    if (this.state.game_address) {\n      room = \"Room: \" + this.state.game_address;\n    }\n\n    return (\n      <div style={{ color: \"white\" }}>\n        <Table>\n          {/* wallet */}\n          <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              padding: 10,\n            }}\n          >\n            <div\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n            >\n              You: {this.state.myWalletAddress} {this.state.myWalletBalance}\n            </div>\n          </div>\n          {/* return to lobby */}\n          <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              right: 15,\n              padding: 10,\n            }}\n          >\n            <a\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n              href=\"/#\"\n            >\n              Return to lobby\n            </a>\n          </div>\n          {/* community cards */}\n          <div\n            style={{ position: \"absolute\", width: \"100%\", textAlign: \"center\" }}\n          >\n            <div\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n            >\n              <div>{room}</div>\n              <div>{stage}</div>\n              <div>{turn}</div>\n              <div>{turnDirection}</div>\n              <br />\n              {this.state.community_cards.map((c, i) =>\n                stateCardToReactCard(c, true, i)\n              )}\n              <div style={{ padding: 35, textAlign: \"center\" }}>\n                <span style={{ marginRight: 125 }}>\n                  B's Total Bet: {nf.format(this.state.player_b_bet)}\n                </span>\n                <span style={{ marginLeft: 125 }}>\n                  A's Total Bet: {nf.format(this.state.player_a_bet)}\n                </span>\n              </div>\n              <div\n                hidden={!lastPlay}\n                style={{ padding: 35, textAlign: \"center\" }}\n              >\n                {lastPlay}\n              </div>\n              <div\n                hidden={!rematch}\n                style={{ padding: 35, textAlign: \"center\" }}\n              >\n                {rematch}\n              </div>\n            </div>\n          </div>\n          {/* player a */}\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: 0,\n              right: 0,\n              padding: 10,\n              textAlign: \"center\",\n            }}\n          >\n            {turn.includes(\"Player A\") ? (\n              <div className=\"ui active inline loader\" />\n            ) : null}\n            <div>\n              Player A\n              {this.state.player_a === this.state.myWalletAddress\n                ? \" (You)\"\n                : \"\"}\n            </div>\n            <div>\n              Hand: <b>{rankHandA}</b>\n            </div>\n            <div>Credits left: {nf.format(this.state.player_a_wallet)}</div>\n            <div>{this.state.player_a}</div>\n          </div>\n          <Hand\n            style={{ position: \"absolute\", right: \"35vw\" }}\n            cards={this.state.player_a_hand.map((c) => stateCardToReactCard(c))}\n          />\n          {/* controls */}\n          <div\n            style={{\n              position: \"fixed\",\n              bottom: 0,\n              padding: 10,\n              width: \"100%\",\n              textAlign: \"center\",\n              zIndex: 999,\n            }}\n            hidden={\n              !this.getMe() ||\n              this.state.stage.includes(\"Ended\") ||\n              this.state.stage.includes(\"Waiting\")\n            }\n          >\n            <Button\n              loading={this.state.checkLoading}\n              onClick={this.check.bind(this)}\n              disabled={\n                this.state.player_a_bet !== this.state.player_b_bet ||\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading\n              }\n            >\n              Check\n            </Button>\n            <Button\n              loading={this.state.callLoading}\n              onClick={this.call.bind(this)}\n              disabled={\n                this.state.player_a_bet === this.state.player_b_bet ||\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading\n              }\n            >\n              Call\n            </Button>\n            <Button\n              loading={this.state.raiseLoading}\n              onClick={this.raise.bind(this)}\n              disabled={\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading ||\n                this.state.raiseAmount <= 0\n              }\n            >\n              {this.getMe() &&\n              this.state.raiseAmount + this.getOther().bet ===\n                this.getMe().wallet\n                ? \"All in!\"\n                : `Raise ${nf.format(this.state.raiseAmount)}`}\n            </Button>\n            <Button\n              loading={this.state.foldLoading}\n              onClick={this.fold.bind(this)}\n              disabled={\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading\n              }\n            >\n              Fold\n            </Button>\n            <center>\n              <div style={{ padding: 10, width: \"300px\" }}>\n                <Slider\n                  min={0}\n                  value={this.state.raiseAmount}\n                  max={\n                    this.getOther() && this.getMe()\n                      ? 1000000 - this.getOther().bet\n                      : 0\n                  }\n                  onChange={(v) => this.setState({ raiseAmount: v })}\n                />\n              </div>\n            </center>\n          </div>\n          {/* player b */}\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: 0,\n              left: 0,\n              padding: 10,\n              textAlign: \"center\",\n            }}\n          >\n            {turn.includes(\"Player B\") ? (\n              <div className=\"ui active inline loader\" />\n            ) : null}\n            <div>\n              Player B{\" \"}\n              {this.state.player_b === this.state.myWalletAddress\n                ? \" (You)\"\n                : \"\"}\n            </div>\n            <div>\n              Hand: <b>{rankHandB}</b>\n            </div>\n            <div>Credits left: {nf.format(this.state.player_b_wallet)}</div>\n            <div>{this.state.player_b}</div>\n          </div>\n\n          <Hand\n            style={{ position: \"absolute\", left: \"23vw\" }}\n            cards={this.state.player_b_hand.map((c) => stateCardToReactCard(c))}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction stateCardToReactCard(c, component = false, index) {\n  if (!c.value || !c.suit) {\n    if (component) {\n      return <Card key={index} />;\n    } else {\n      return {};\n    }\n  }\n\n  let suit = {\n    Spade: \"S\",\n    Club: \"C\",\n    Heart: \"H\",\n    Diamond: \"D\",\n  }[c.suit];\n\n  let face = {\n    Two: \"2\",\n    Three: \"3\",\n    Four: \"4\",\n    Five: \"5\",\n    Six: \"6\",\n    Seven: \"7\",\n    Eight: \"8\",\n    Nine: \"9\",\n    Ten: \"T\",\n    Jack: \"J\",\n    Queen: \"Q\",\n    King: \"K\",\n    Ace: \"A\",\n  }[c.value];\n\n  if (component) {\n    return <Card key={index} face={face} suit={suit} />;\n  } else {\n    return { face, suit };\n  }\n}\n\nfunction stateCardToPokerSoverCard(c) {\n  if (!c.value || !c.suit) {\n    return null;\n  }\n\n  let type = {\n    Spade: \"s\",\n    Club: \"c\",\n    Heart: \"h\",\n    Diamond: \"d\",\n  }[c.suit];\n\n  let rank = {\n    Two: \"2\",\n    Three: \"3\",\n    Four: \"4\",\n    Five: \"5\",\n    Six: \"6\",\n    Seven: \"7\",\n    Eight: \"8\",\n    Nine: \"9\",\n    Ten: \"T\",\n    Jack: \"J\",\n    Queen: \"Q\",\n    King: \"K\",\n    Ace: \"A\",\n  }[c.value];\n\n  return rank + type;\n}\n\nexport default App;\n","var map = {\n\t\"./2C.png\": 573,\n\t\"./2D.png\": 574,\n\t\"./2H.png\": 575,\n\t\"./2S.png\": 576,\n\t\"./3C.png\": 577,\n\t\"./3D.png\": 578,\n\t\"./3H.png\": 579,\n\t\"./3S.png\": 580,\n\t\"./4C.png\": 581,\n\t\"./4D.png\": 582,\n\t\"./4H.png\": 583,\n\t\"./4S.png\": 584,\n\t\"./5C.png\": 585,\n\t\"./5D.png\": 586,\n\t\"./5H.png\": 587,\n\t\"./5S.png\": 588,\n\t\"./6C.png\": 589,\n\t\"./6D.png\": 590,\n\t\"./6H.png\": 591,\n\t\"./6S.png\": 592,\n\t\"./7C.png\": 593,\n\t\"./7D.png\": 594,\n\t\"./7H.png\": 595,\n\t\"./7S.png\": 596,\n\t\"./8C.png\": 597,\n\t\"./8D.png\": 598,\n\t\"./8H.png\": 599,\n\t\"./8S.png\": 600,\n\t\"./9C.png\": 601,\n\t\"./9D.png\": 602,\n\t\"./9H.png\": 603,\n\t\"./9S.png\": 604,\n\t\"./AC.png\": 605,\n\t\"./AD.png\": 606,\n\t\"./AH.png\": 607,\n\t\"./AS.png\": 608,\n\t\"./BACK.png\": 609,\n\t\"./JC.png\": 610,\n\t\"./JD.png\": 611,\n\t\"./JH.png\": 612,\n\t\"./JS.png\": 613,\n\t\"./KC.png\": 614,\n\t\"./KD.png\": 615,\n\t\"./KH.png\": 616,\n\t\"./KS.png\": 617,\n\t\"./QC.png\": 618,\n\t\"./QD.png\": 619,\n\t\"./QH.png\": 620,\n\t\"./QS.png\": 621,\n\t\"./TC.png\": 622,\n\t\"./TD.png\": 623,\n\t\"./TH.png\": 624,\n\t\"./TS.png\": 625,\n\t\"./extra/aces.png\": 626,\n\t\"./extra/back.png\": 627,\n\t\"./extra/bridge-back-blue.png\": 628,\n\t\"./extra/bridge-back-gray.png\": 629,\n\t\"./extra/bridge-back-green.png\": 630,\n\t\"./extra/bridge-back-purple.png\": 631,\n\t\"./extra/bridge-back-red.png\": 632,\n\t\"./extra/bridge-back-yellow.png\": 633,\n\t\"./extra/bridge-backs.png\": 634,\n\t\"./extra/honor-clubs.png\": 635,\n\t\"./extra/honor-diamonds.png\": 636,\n\t\"./extra/honor-hearts.png\": 637,\n\t\"./extra/honor-spades.png\": 638\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 572;","var map = {\n\t\"./black.png\": 640,\n\t\"./blue.png\": 641,\n\t\"./green.png\": 642,\n\t\"./red.png\": 643,\n\t\"./white.png\": 644\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 639;","var map = {\n\t\"./burlap.png\": 646,\n\t\"./cardboard.png\": 647,\n\t\"./default-light.png\": 648,\n\t\"./default.png\": 649,\n\t\"./fabric.png\": 650,\n\t\"./felt.png\": 651,\n\t\"./leather.png\": 652,\n\t\"./noise.png\": 653,\n\t\"./paper.png\": 654,\n\t\"./pinstripe.png\": 655,\n\t\"./slate.png\": 656,\n\t\"./subtle.png\": 657,\n\t\"./suede.png\": 658,\n\t\"./twill.png\": 659\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 645;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}