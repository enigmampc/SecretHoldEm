{"version":3,"sources":["App.js","../node_modules/react-casino/dist/assets/png/cards sync /^/.//.*/.png$","../node_modules/react-casino/dist/assets/png/chips sync /^/.//.*/.png$","../node_modules/react-casino/dist/assets/png/textures sync /^/.//.*/.png$","serviceWorker.js","index.js"],"names":["PokerSolver","require","Hand","nf","Intl","NumberFormat","maximumFractionDigits","console","log","emptyState","game_address","all_rooms","community_cards","my_hand","player_a_hand","player_b_hand","player_a","player_a_bet","player_a_wallet","player_b","player_b_bet","player_b_wallet","stage","turn","new_room_name","createLoading","joinLoading","checkLoading","callLoading","raiseLoading","withdrawLoading","depositLoading","raiseAmount","depositAmount","rematchLoading","player_a_wants_rematch","player_b_wants_rematch","player_a_win_counter","player_b_win_counter","tie_counter","myWalletBalanceUscrt","App","props","state","Object","assign","window","location","hash","replace","onhashchange","a","setState","mnemonic","localStorage","getItem","bip39","setItem","tx_encryption_seed","Uint8Array","from","JSON","parse","SecretJS","GenerateNewSeed","fromMnemonic","signingPen","myWalletAddress","pubkey","secretJsClient","signBytes","sign","init","amount","denom","gas","exec","this","refreshAllRooms","getContracts","data","setTimeout","setInterval","refreshMyHand","stringify","secret","queryContractSmart","get_my_hand","refreshMyWalletBalance","getAccount","balance","myWalletBalance","format","href","rel","target","refreshTableStateInterval","refreshTableState","get_public_data","length","concat","slice","starter","last_play","instantiate","create_room","big_blind","seed","Buffer","readUInt32BE","execute","join","foldLoading","fold","check","call","raise","rematch","withdraw","top_up","player","address","bet","wallet","wants_rematch","style","color","position","top","left","padding","zIndex","textAlign","Input","placeholder","value","onChange","_","loading","disabled","onClick","createRoom","bind","map","r","i","key","label","handA","stateCardToPokerSoverCard","filter","x","rankHandA","getMe","solve","descr","e","handB","rankHandB","includes","winner","isLoading","joinRoom","hidden","width","min","MIN_TABLE_BIG_BLINDS","max","Math","MAX_TABLE_BIG_BLINDS","v","turnDirection","lastPlay","match","getOther","room","minDeposit","maxDeposit","alreadyInside","BIG_BLIND","deposit","marginTop","right","c","stateCardToReactCard","marginRight","marginLeft","bottom","className","cards","React","Component","component","index","suit","Spade","Club","Heart","Diamond","face","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","Ace","type","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","module","exports","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81ba0849.chunk.js","sourcesContent":["import React from \"react\";\nimport * as SecretJS from \"secretjs\";\nimport * as bip39 from \"bip39\";\nimport { Hand, Table, Card } from \"react-casino\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport Slider from \"rc-slider\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\n\nconst PokerSolver = require(\"pokersolver\").Hand;\n\nconst nf = new Intl.NumberFormat(\"en-US\", { maximumFractionDigits: 6 });\nconst codeId = 19;\nconsole.log(\"Code ID:\", codeId);\nconst refreshTableStateInterval = 2000;\n\nconst BIG_BLIND = 1_000_000;\nconst MAX_TABLE_BIG_BLINDS = 100;\nconst MIN_TABLE_BIG_BLINDS = 20;\n\nconst emptyState = {\n  game_address: \"\",\n  all_rooms: [],\n  community_cards: [],\n  my_hand: [{}, {}],\n  player_a_hand: [{}, {}],\n  player_b_hand: [{}, {}],\n  player_a: \"\",\n  player_a_bet: 0,\n  player_a_wallet: 0,\n  player_b: \"\",\n  player_b_bet: 0,\n  player_b_wallet: 0,\n  stage: \"\",\n  turn: \"\",\n  new_room_name: \"\",\n  createLoading: false,\n  joinLoading: false,\n  checkLoading: false,\n  callLoading: false,\n  raiseLoading: false,\n  withdrawLoading: false,\n  depositLoading: false,\n  raiseAmount: 25000,\n  depositAmount: 0,\n  rematchLoading: false,\n  player_a_wants_rematch: false,\n  player_b_wants_rematch: false,\n  player_a_win_counter: 0,\n  player_b_win_counter: 0,\n  tie_counter: 0,\n  myWalletBalanceUscrt: 0,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = Object.assign({}, emptyState, {\n      game_address: window.location.hash.replace(\"#\", \"\"),\n    });\n  }\n\n  async componentDidMount() {\n    window.onhashchange = async () => {\n      this.setState(\n        Object.assign({}, emptyState, {\n          game_address: window.location.hash.replace(\"#\", \"\"),\n        })\n      );\n    };\n\n    let mnemonic = localStorage.getItem(\"mnemonic\");\n    if (!mnemonic) {\n      mnemonic = bip39.generateMnemonic();\n      localStorage.setItem(\"mnemonic\", mnemonic);\n    }\n\n    let tx_encryption_seed = localStorage.getItem(\"tx_encryption_seed\");\n    if (tx_encryption_seed) {\n      tx_encryption_seed = Uint8Array.from(\n        JSON.parse(`[${tx_encryption_seed}]`)\n      );\n    } else {\n      tx_encryption_seed = SecretJS.EnigmaUtils.GenerateNewSeed();\n      localStorage.setItem(\"tx_encryption_seed\", tx_encryption_seed);\n    }\n\n    const signingPen = await SecretJS.Secp256k1Pen.fromMnemonic(mnemonic);\n    const myWalletAddress = SecretJS.pubkeyToAddress(\n      SecretJS.encodeSecp256k1Pubkey(signingPen.pubkey),\n      \"secret\"\n    );\n    const secretJsClient = new SecretJS.SigningCosmWasmClient(\n      \"https://bootstrap.pub.testnet.enigma.co\",\n      myWalletAddress,\n      (signBytes) => signingPen.sign(signBytes),\n      tx_encryption_seed,\n      {\n        init: {\n          amount: [{ amount: \"200000\", denom: \"uscrt\" }],\n          gas: \"200000\",\n        },\n        exec: {\n          amount: [{ amount: \"200000\", denom: \"uscrt\" }],\n          gas: \"200000\",\n        },\n      }\n    );\n\n    this.setState({ secretJsClient, myWalletAddress, mnemonic });\n\n    const refreshAllRooms = async () => {\n      if (window.location.hash !== \"\") {\n        return;\n      }\n\n      try {\n        console.log(\"refreshAllRooms\");\n        const data = await secretJsClient.getContracts(codeId);\n\n        this.setState({\n          all_rooms: data,\n        });\n      } catch (e) {\n        console.log(\"refreshAllRooms\", e);\n      }\n    };\n    setTimeout(refreshAllRooms, 0);\n    setInterval(refreshAllRooms, refreshTableStateInterval);\n\n    const refreshMyHand = async () => {\n      if (window.location.hash === \"\") {\n        return;\n      }\n\n      if (!this.state.player_a || !this.state.player_b) {\n        return;\n      }\n\n      if (\n        this.state.player_a !== this.state.myWalletAddress &&\n        this.state.player_b !== this.state.myWalletAddress\n      ) {\n        return;\n      }\n\n      if (\n        JSON.stringify(this.state.my_hand) !== JSON.stringify([{}, {}]) &&\n        this.state.stage !== \"PreFlop\"\n      ) {\n        // this should work because when switching room (= switching hash location)\n        // we set an empty state\n        return;\n      }\n\n      const secret = +localStorage.getItem(this.state.game_address);\n      try {\n        console.log(\"refreshMyHand\");\n\n        const data = await secretJsClient.queryContractSmart(\n          this.state.game_address,\n          { get_my_hand: { secret } }\n        );\n\n        this.setState({\n          my_hand: data,\n        });\n\n        if (this.state.myWalletAddress === this.state.player_a) {\n          this.setState({\n            player_a_hand: this.state.my_hand,\n          });\n        } else if (this.state.myWalletAddress === this.state.player_b) {\n          this.setState({\n            player_b_hand: this.state.my_hand,\n          });\n        }\n      } catch (e) {\n        console.log(\"refreshMyHand\", e);\n      }\n    };\n    setTimeout(refreshMyHand, 0);\n    setInterval(refreshMyHand, refreshTableStateInterval);\n\n    const refreshMyWalletBalance = async () => {\n      try {\n        console.log(\"refreshMyWalletBalance\");\n\n        const data = await secretJsClient.getAccount(myWalletAddress);\n\n        if (!data) {\n          this.setState({\n            myWalletBalanceUscrt: 0,\n            myWalletBalance: (\n              <span>\n                (No funds - Go get some{\" \"}\n                <a\n                  href=\"https://faucet.pub.testnet.enigma.co\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  from the faucet\n                </a>\n                )\n              </span>\n            ),\n          });\n        } else {\n          this.setState({\n            myWalletBalanceUscrt: +data.balance[0].amount,\n            myWalletBalance: `(${nf.format(\n              +data.balance[0].amount / 1000000\n            )} SCRT)`,\n          });\n        }\n      } catch (e) {\n        console.log(\"refreshMyWalletBalance\", e);\n      }\n    };\n    setTimeout(refreshMyWalletBalance, 0);\n    setInterval(refreshMyWalletBalance, refreshTableStateInterval * 5);\n\n    const refreshTableState = async () => {\n      if (window.location.hash === \"\") {\n        return;\n      }\n\n      try {\n        console.log(\"refreshTableState\");\n\n        const data = await secretJsClient.queryContractSmart(\n          this.state.game_address,\n          { get_public_data: {} }\n        );\n\n        if (data.player_a_hand.length === 0) {\n          data.player_a_hand = [{}, {}];\n        }\n        if (data.player_b_hand.length === 0) {\n          data.player_b_hand = [{}, {}];\n        }\n\n        if (this.state.myWalletAddress === data.player_a) {\n          this.setState({\n            player_a_hand: this.state.my_hand,\n            player_b_hand: data.player_b_hand,\n          });\n        } else if (this.state.myWalletAddress === data.player_b) {\n          this.setState({\n            player_a_hand: data.player_a_hand,\n            player_b_hand: this.state.my_hand,\n          });\n        } else {\n          this.setState({\n            player_a_hand: data.player_a_hand,\n            player_b_hand: data.player_b_hand,\n          });\n        }\n\n        this.setState({\n          community_cards: data.community_cards\n            .concat([{}, {}, {}, {}, {}])\n            .slice(0, 5),\n          player_a: data.player_a,\n          player_a_bet: data.player_a_bet,\n          player_a_wallet: data.player_a_wallet,\n          player_b: data.player_b,\n          player_b_bet: data.player_b_bet,\n          player_b_wallet: data.player_b_wallet,\n          stage: data.stage,\n          starter: data.starter,\n          turn: data.turn,\n          last_play: data.last_play,\n          player_a_wants_rematch: data.player_a_wants_rematch,\n          player_b_wants_rematch: data.player_b_wants_rematch,\n\n          player_a_win_counter: data.player_a_win_counter,\n          player_b_win_counter: data.player_b_win_counter,\n          tie_counter: data.tie_counter,\n        });\n      } catch (e) {\n        console.log(\"refreshTableState\", e);\n      }\n    };\n\n    setTimeout(refreshTableState, 0);\n    setInterval(refreshTableState, refreshTableStateInterval);\n  }\n\n  async createRoom() {\n    this.setState({ createLoading: true });\n    try {\n      await this.state.secretJsClient.instantiate(\n        codeId,\n        {\n          create_room: { big_blind: BIG_BLIND },\n        },\n        this.state.new_room_name\n      );\n    } catch (e) {\n      console.log(\"createRoom\", e);\n    }\n    setTimeout(\n      () =>\n        this.setState({\n          new_room_name: \"\",\n          createLoading: false,\n        }),\n      refreshTableStateInterval\n    );\n  }\n\n  async joinRoom() {\n    if (!this.state.game_address) {\n      // ah?\n      return;\n    }\n\n    this.setState({ joinLoading: true });\n\n    let secret = +localStorage.getItem(this.state.game_address);\n    if (!secret) {\n      const seed = SecretJS.EnigmaUtils.GenerateNewSeed();\n      secret = Buffer.from(seed.slice(0, 8)).readUInt32BE(0); // 64 bit\n    }\n    localStorage.setItem(this.state.game_address, secret);\n\n    try {\n      await this.state.secretJsClient.execute(\n        this.state.game_address,\n        {\n          join: { secret },\n        },\n        \"\",\n        [\n          {\n            amount: `${this.state.depositAmount}`,\n            denom: \"uscrt\",\n          },\n        ]\n      );\n    } catch (e) {\n      console.log(\"join\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ joinLoading: false, depositAmount: 0 }),\n      refreshTableStateInterval\n    );\n  }\n\n  async fold() {\n    this.setState({ foldLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        fold: {},\n      });\n    } catch (e) {\n      console.log(\"fold\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ foldLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async check() {\n    this.setState({ checkLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        check: {},\n      });\n    } catch (e) {\n      console.log(\"check\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ checkLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async call() {\n    this.setState({ callLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        call: {},\n      });\n    } catch (e) {\n      console.log(\"call\", e);\n    }\n\n    setTimeout(\n      () => this.setState({ callLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async raise() {\n    this.setState({ raiseLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        raise: { amount: this.state.raiseAmount },\n      });\n    } catch (e) {\n      console.log(\"raise\", e);\n    }\n    setTimeout(\n      () => this.setState({ raiseLoading: false, raiseAmount: 25000 }),\n      refreshTableStateInterval\n    );\n  }\n\n  async rematch() {\n    this.setState({ rematchLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        rematch: {},\n      });\n    } catch (e) {\n      console.log(\"rematch\", e);\n    }\n    setTimeout(\n      () => this.setState({ rematchLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async withdraw() {\n    this.setState({ withdrawLoading: true });\n    try {\n      await this.state.secretJsClient.execute(this.state.game_address, {\n        withdraw: {},\n      });\n    } catch (e) {\n      console.log(\"withdraw\", e);\n    }\n    setTimeout(\n      () => this.setState({ withdrawLoading: false }),\n      refreshTableStateInterval\n    );\n  }\n\n  async deposit() {\n    this.setState({ depositLoading: true });\n    try {\n      await this.state.secretJsClient.execute(\n        this.state.game_address,\n        {\n          top_up: {},\n        },\n        \"\",\n        [{ amount: `${this.state.depositAmount}`, denom: \"uscrt\" }]\n      );\n    } catch (e) {\n      console.log(\"deposit\", e);\n    }\n    setTimeout(\n      () => this.setState({ depositLoading: false, depositAmount: 0 }),\n      refreshTableStateInterval\n    );\n  }\n\n  getMe() {\n    if (!this.state.myWalletAddress) {\n      return null;\n    }\n\n    if (this.state.myWalletAddress === this.state.player_a) {\n      return {\n        player: \"A\",\n        address: this.state.player_a,\n        bet: this.state.player_a_bet,\n        wallet: this.state.player_a_wallet,\n        wants_rematch: this.state.player_a_wants_rematch,\n      };\n    }\n\n    if (this.state.myWalletAddress === this.state.player_b) {\n      return {\n        player: \"B\",\n        address: this.state.player_b,\n        bet: this.state.player_b_bet,\n        wallet: this.state.player_b_wallet,\n        wants_rematch: this.state.player_b_wants_rematch,\n      };\n    }\n\n    return null;\n  }\n\n  getOther() {\n    if (!this.state.myWalletAddress) {\n      return null;\n    }\n\n    if (this.state.myWalletAddress !== this.state.player_a) {\n      return {\n        player: \"A\",\n        address: this.state.player_a,\n        bet: this.state.player_a_bet,\n        wallet: this.state.player_a_wallet,\n        wants_rematch: this.state.player_a_wants_rematch,\n      };\n    }\n\n    if (this.state.myWalletAddress !== this.state.player_b) {\n      return {\n        player: \"B\",\n        address: this.state.player_b,\n        bet: this.state.player_b_bet,\n        wallet: this.state.player_b_wallet,\n        wants_rematch: this.state.player_b_wants_rematch,\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    if (window.location.hash === \"\") {\n      return (\n        <div style={{ color: \"white\" }}>\n          <Table>\n            {/* wallet */}\n            <div\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                padding: 10,\n              }}\n            >\n              <div\n                style={{\n                  position: \"relative\",\n                  zIndex: 9999,\n                }}\n              >\n                You: {this.state.myWalletAddress} {this.state.myWalletBalance}\n              </div>\n            </div>\n            <div\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                }}\n              >\n                <Form.Input\n                  placeholder=\"Room name\"\n                  value={this.state.new_room_name}\n                  onChange={(_, { value }) =>\n                    this.setState({ new_room_name: value })\n                  }\n                />\n                <Button\n                  loading={this.state.createLoading}\n                  disabled={this.state.createLoading}\n                  onClick={this.createRoom.bind(this)}\n                >\n                  Create!\n                </Button>\n              </div>\n              <br />\n              <center>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Room Name</th>\n                      <th>Address</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.all_rooms.map((r, i) => (\n                      <tr key={i}>\n                        <td>{r.label}</td>\n                        <td>\n                          <a href={\"#\" + r.address}>{r.address}</a>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </center>\n            </div>\n          </Table>\n        </div>\n      );\n    }\n\n    const handA = this.state.player_a_hand\n      .concat(this.state.community_cards)\n      .map(stateCardToPokerSoverCard)\n      .filter((x) => x);\n    let rankHandA = \"Unknown\";\n    if (handA.length > 5 || (this.getMe() && this.getMe().player === \"A\")) {\n      try {\n        const solve = PokerSolver.solve(handA);\n        rankHandA = solve.descr;\n      } catch (e) {}\n    }\n\n    const handB = this.state.player_b_hand\n      .concat(this.state.community_cards)\n      .map(stateCardToPokerSoverCard)\n      .filter((x) => x);\n    let rankHandB = \"Unknown\";\n    if (handB.length > 5 || (this.getMe() && this.getMe().player === \"B\")) {\n      try {\n        const solve = PokerSolver.solve(handB);\n        rankHandB = solve.descr;\n      } catch (e) {}\n    }\n\n    let stage = this.state.stage;\n    if (stage.includes(\"EndedWinner\")) {\n      const winner = stage.replace(\"EndedWinner\", \"\");\n      stage = (\n        <span>\n          <div>\n            <b>Player {winner} Wins!</b>\n          </div>\n\n          {typeof this.state.last_play === \"string\" &&\n          !this.state.last_play.includes(\"fold\") ? (\n            rankHandA !== rankHandB ? (\n              <div>\n                <b>{winner === \"A\" ? rankHandA : rankHandB}</b> vs. a lousy{\" \"}\n                <b>{winner === \"A\" ? rankHandB : rankHandA}</b>\n              </div>\n            ) : (\n              <div>\n                Both with <b>{rankHandA}</b>, {winner} won with a kicker!\n              </div>\n            )\n          ) : null}\n        </span>\n      );\n    } else if (stage.includes(\"EndedDraw\")) {\n      stage = `It's a Tie of ${rankHandA}!`;\n    } else if (stage === \"WaitingForPlayersToJoin\") {\n      const isLoading =\n        this.state.joinLoading ||\n        !!this.getMe() ||\n        !!(\n          this.state.myWalletBalance &&\n          typeof this.state.myWalletBalance === \"string\" &&\n          !this.state.myWalletBalance.includes(\"SCRT\")\n        );\n      stage = (\n        <span>\n          <div>Waiting for players</div>\n          <div>\n            <Button\n              loading={isLoading}\n              disabled={\n                isLoading ||\n                this.state.myWalletBalanceUscrt === 0 ||\n                this.state.depositAmount === 0\n              }\n              onClick={this.joinRoom.bind(this)}\n            >\n              Join and Deposit\n              {` (${nf.format(\n                this.state.depositAmount / 1000000\n              )} SCRT = ${nf.format(this.state.depositAmount)} credits)`}\n            </Button>\n            <center hidden={isLoading || this.state.myWalletBalanceUscrt === 0}>\n              <Slider\n                style={{ width: \"400px\" }}\n                min={\n                  this.state.myWalletBalanceUscrt === 0\n                    ? 0\n                    : MIN_TABLE_BIG_BLINDS * BIG_BLIND\n                }\n                value={this.state.depositAmount}\n                max={Math.min(\n                  this.state.myWalletBalanceUscrt,\n                  MAX_TABLE_BIG_BLINDS * BIG_BLIND\n                )}\n                onChange={(v) => this.setState({ depositAmount: v })}\n              />\n            </center>\n          </div>\n        </span>\n      );\n    } else if (stage) {\n      stage += \" betting round\";\n    }\n\n    let turn = \"Player A\";\n    let turnDirection = \"->\";\n    let lastPlay = this.state.last_play || \"\";\n    if (this.state.turn === this.state.player_b) {\n      turn = \"Player B\";\n      turnDirection = \"<-\";\n    }\n    turn = \"Turn: \" + turn;\n    if (\n      !this.state.stage ||\n      !this.state.turn ||\n      this.state.stage.includes(\"Ended\") ||\n      this.state.stage.includes(\"Waiting\")\n    ) {\n      turn = \"\";\n      turnDirection = \"\";\n      lastPlay = \"\";\n    }\n    if (typeof this.state.last_play === \"string\") {\n      if (this.state.last_play.includes(\"fold\")) {\n        lastPlay = this.state.last_play;\n      } else if (this.state.last_play.includes(\"raised\")) {\n        try {\n          const amount = +this.state.last_play.match(/\\d+/g)[0];\n          lastPlay = this.state.last_play.replace(\n            `${amount}`,\n            nf.format(amount)\n          );\n        } catch (e) {}\n      }\n    }\n\n    let rematch = null;\n    if (\n      typeof this.state.stage === \"string\" &&\n      this.state.stage.includes(\"Ended\")\n    ) {\n      rematch = (\n        <div>\n          {this.getMe() && this.getOther() ? (\n            <Button\n              loading={this.state.rematchLoading || this.getMe().wants_rematch}\n              onClick={this.rematch.bind(this)}\n              disabled={\n                this.state.rematchLoading ||\n                this.getMe().wallet === 0 ||\n                this.getOther().wallet === 0 ||\n                this.getMe().wants_rematch\n              }\n            >\n              Rematch!\n            </Button>\n          ) : null}\n          {this.state.player_a_wants_rematch ? (\n            <div style={{ padding: 10 }}>Rematch: Waiting for player B.</div>\n          ) : null}\n          {this.state.player_b_wants_rematch ? (\n            <div style={{ padding: 10 }}>Rematch: Waiting for player A.</div>\n          ) : null}\n        </div>\n      );\n    }\n\n    let room = \"\";\n    if (this.state.game_address) {\n      room = \"Room: \" + this.state.game_address;\n    }\n\n    let minDeposit = 0;\n    let maxDeposit = 0;\n    if (this.getMe()) {\n      const alreadyInside = this.getMe().wallet + this.getMe().bet;\n\n      maxDeposit = BIG_BLIND * MAX_TABLE_BIG_BLINDS - alreadyInside;\n      maxDeposit = Math.max(maxDeposit, 0);\n\n      minDeposit = BIG_BLIND * MIN_TABLE_BIG_BLINDS - alreadyInside;\n      minDeposit = Math.max(minDeposit, 0);\n    }\n\n    return (\n      <div style={{ color: \"white\" }}>\n        <Table>\n          {/* wallet + scoreboard */}\n          <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              padding: 10,\n            }}\n          >\n            <div style={{ width: \"700px\" }}>\n              <div\n                style={{\n                  position: \"relative\",\n                  zIndex: 9999,\n                }}\n              >\n                You: {this.state.myWalletAddress} {this.state.myWalletBalance}\n              </div>\n              <div>\n                <Button\n                  loading={this.state.withdrawLoading}\n                  onClick={this.withdraw.bind(this)}\n                  disabled={\n                    this.state.withdrawLoading ||\n                    !this.getMe() ||\n                    this.getMe().wallet === 0\n                  }\n                >\n                  {!this.state.stage.includes(\"Ended\") &&\n                  !this.state.stage.includes(\"Waiting\")\n                    ? \"Fold + \"\n                    : \"\"}\n                  Withdraw\n                  {this.getMe()\n                    ? ` (${nf.format(this.getMe().wallet / 1000000)} SCRT)`\n                    : \"\"}\n                </Button>\n                <Button\n                  loading={this.state.depositLoading}\n                  onClick={this.deposit.bind(this)}\n                  disabled={\n                    this.state.depositLoading ||\n                    this.state.depositAmount === 0 ||\n                    !this.getMe()\n                  }\n                >\n                  Deposit\n                  {this.getMe()\n                    ? ` (${nf.format(\n                        this.state.depositAmount / 1000000\n                      )} SCRT = ${nf.format(this.state.depositAmount)} credits)`\n                    : \"\"}\n                </Button>\n                <div hidden={!this.getMe() || minDeposit >= maxDeposit}>\n                  <Slider\n                    style={{ width: \"400px\" }}\n                    min={minDeposit}\n                    value={this.state.depositAmount}\n                    max={maxDeposit}\n                    onChange={(v) => this.setState({ depositAmount: v })}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: 30,\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n            >\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <center>Wins:</center>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th>Player A</th>\n                    <td>{this.state.player_a_win_counter}</td>\n                  </tr>\n                  <tr>\n                    <th>Player B</th>\n                    <td>{this.state.player_b_win_counter}</td>\n                  </tr>\n                  <tr>\n                    <th>Ties</th>\n                    <td>{this.state.tie_counter}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {/* return to lobby */}\n          <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              right: 15,\n              padding: 10,\n            }}\n          >\n            <a\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n              href=\"/#\"\n            >\n              Return to lobby\n            </a>\n          </div>\n          {/* community cards */}\n          <div\n            style={{ position: \"absolute\", width: \"100%\", textAlign: \"center\" }}\n          >\n            <div\n              style={{\n                position: \"relative\",\n                zIndex: 9999,\n              }}\n            >\n              <div>{room}</div>\n              <div>{stage}</div>\n              <div>{turn}</div>\n              <div>{turnDirection}</div>\n              <br />\n              {this.state.community_cards.map((c, i) =>\n                stateCardToReactCard(c, true, i)\n              )}\n              <div style={{ padding: 35, textAlign: \"center\" }}>\n                <span style={{ marginRight: 125 }}>\n                  B's Total Bet: {nf.format(this.state.player_b_bet)}\n                </span>\n                <span style={{ marginLeft: 125 }}>\n                  A's Total Bet: {nf.format(this.state.player_a_bet)}\n                </span>\n              </div>\n              <div\n                hidden={!lastPlay}\n                style={{ padding: 35, textAlign: \"center\" }}\n              >\n                {lastPlay}\n              </div>\n              <div\n                hidden={!rematch}\n                style={{ padding: 35, textAlign: \"center\" }}\n              >\n                {rematch}\n              </div>\n            </div>\n          </div>\n          {/* player a */}\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: 0,\n              right: 0,\n              padding: 10,\n              textAlign: \"center\",\n            }}\n          >\n            {turn.includes(\"Player A\") ? (\n              <div className=\"ui active inline loader\" />\n            ) : null}\n            <div>\n              Player A\n              {this.state.player_a === this.state.myWalletAddress\n                ? \" (You)\"\n                : \"\"}\n            </div>\n            <div>\n              Hand: <b>{rankHandA}</b>\n            </div>\n            <div>Credits left: {nf.format(this.state.player_a_wallet)}</div>\n            <div>{this.state.player_a}</div>\n          </div>\n          <Hand\n            style={{ position: \"absolute\", right: \"35vw\" }}\n            cards={this.state.player_a_hand.map((c) => stateCardToReactCard(c))}\n          />\n          {/* controls */}\n          <div\n            style={{\n              position: \"fixed\",\n              bottom: 0,\n              padding: 10,\n              width: \"100%\",\n              textAlign: \"center\",\n              zIndex: 999,\n            }}\n            hidden={\n              !this.getMe() ||\n              this.state.stage.includes(\"Ended\") ||\n              this.state.stage.includes(\"Waiting\")\n            }\n          >\n            <Button\n              loading={this.state.checkLoading}\n              onClick={this.check.bind(this)}\n              disabled={\n                this.state.player_a_bet !== this.state.player_b_bet ||\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading\n              }\n            >\n              Check\n            </Button>\n            <Button\n              loading={this.state.callLoading}\n              onClick={this.call.bind(this)}\n              disabled={\n                this.state.player_a_bet === this.state.player_b_bet ||\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading\n              }\n            >\n              Call\n            </Button>\n            <Button\n              loading={this.state.raiseLoading}\n              onClick={this.raise.bind(this)}\n              disabled={\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading ||\n                this.state.raiseAmount <= 0\n              }\n            >\n              {this.getMe() &&\n              this.getOther() &&\n              this.state.raiseAmount + this.getOther().bet ===\n                this.getMe().wallet + this.getMe().bet\n                ? \"All in!\"\n                : `Raise ${nf.format(this.state.raiseAmount)}`}\n            </Button>\n            <Button\n              loading={this.state.foldLoading}\n              onClick={this.fold.bind(this)}\n              disabled={\n                !this.state.turn ||\n                this.state.turn !== this.state.myWalletAddress ||\n                this.state.stage.includes(\"Ended\") ||\n                this.state.stage.includes(\"Waiting\") ||\n                this.state.callLoading ||\n                this.state.raiseLoading ||\n                this.state.foldLoading ||\n                this.state.checkLoading\n              }\n            >\n              Fold\n            </Button>\n            <center>\n              <div style={{ padding: 10, width: \"300px\" }}>\n                <Slider\n                  min={0}\n                  value={this.state.raiseAmount}\n                  max={\n                    this.getOther() && this.getMe()\n                      ? Math.min(\n                          this.getOther().wallet,\n                          this.getMe().wallet -\n                            (this.getOther().bet - this.getMe().bet)\n                        )\n                      : 0\n                  }\n                  onChange={(v) => this.setState({ raiseAmount: v })}\n                />\n              </div>\n            </center>\n          </div>\n          {/* player b */}\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: 0,\n              left: 0,\n              padding: 10,\n              textAlign: \"center\",\n            }}\n          >\n            {turn.includes(\"Player B\") ? (\n              <div className=\"ui active inline loader\" />\n            ) : null}\n            <div>\n              Player B{\" \"}\n              {this.state.player_b === this.state.myWalletAddress\n                ? \" (You)\"\n                : \"\"}\n            </div>\n            <div>\n              Hand: <b>{rankHandB}</b>\n            </div>\n            <div>Credits left: {nf.format(this.state.player_b_wallet)}</div>\n            <div>{this.state.player_b}</div>\n          </div>\n\n          <Hand\n            style={{ position: \"absolute\", left: \"23vw\" }}\n            cards={this.state.player_b_hand.map((c) => stateCardToReactCard(c))}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction stateCardToReactCard(c, component = false, index) {\n  if (!c.value || !c.suit) {\n    if (component) {\n      return <Card key={index} />;\n    } else {\n      return {};\n    }\n  }\n\n  let suit = {\n    Spade: \"S\",\n    Club: \"C\",\n    Heart: \"H\",\n    Diamond: \"D\",\n  }[c.suit];\n\n  let face = {\n    Two: \"2\",\n    Three: \"3\",\n    Four: \"4\",\n    Five: \"5\",\n    Six: \"6\",\n    Seven: \"7\",\n    Eight: \"8\",\n    Nine: \"9\",\n    Ten: \"T\",\n    Jack: \"J\",\n    Queen: \"Q\",\n    King: \"K\",\n    Ace: \"A\",\n  }[c.value];\n\n  if (component) {\n    return <Card key={index} face={face} suit={suit} />;\n  } else {\n    return { face, suit };\n  }\n}\n\nfunction stateCardToPokerSoverCard(c) {\n  if (!c.value || !c.suit) {\n    return null;\n  }\n\n  let type = {\n    Spade: \"s\",\n    Club: \"c\",\n    Heart: \"h\",\n    Diamond: \"d\",\n  }[c.suit];\n\n  let rank = {\n    Two: \"2\",\n    Three: \"3\",\n    Four: \"4\",\n    Five: \"5\",\n    Six: \"6\",\n    Seven: \"7\",\n    Eight: \"8\",\n    Nine: \"9\",\n    Ten: \"T\",\n    Jack: \"J\",\n    Queen: \"Q\",\n    King: \"K\",\n    Ace: \"A\",\n  }[c.value];\n\n  return rank + type;\n}\n\nexport default App;\n","var map = {\n\t\"./2C.png\": 573,\n\t\"./2D.png\": 574,\n\t\"./2H.png\": 575,\n\t\"./2S.png\": 576,\n\t\"./3C.png\": 577,\n\t\"./3D.png\": 578,\n\t\"./3H.png\": 579,\n\t\"./3S.png\": 580,\n\t\"./4C.png\": 581,\n\t\"./4D.png\": 582,\n\t\"./4H.png\": 583,\n\t\"./4S.png\": 584,\n\t\"./5C.png\": 585,\n\t\"./5D.png\": 586,\n\t\"./5H.png\": 587,\n\t\"./5S.png\": 588,\n\t\"./6C.png\": 589,\n\t\"./6D.png\": 590,\n\t\"./6H.png\": 591,\n\t\"./6S.png\": 592,\n\t\"./7C.png\": 593,\n\t\"./7D.png\": 594,\n\t\"./7H.png\": 595,\n\t\"./7S.png\": 596,\n\t\"./8C.png\": 597,\n\t\"./8D.png\": 598,\n\t\"./8H.png\": 599,\n\t\"./8S.png\": 600,\n\t\"./9C.png\": 601,\n\t\"./9D.png\": 602,\n\t\"./9H.png\": 603,\n\t\"./9S.png\": 604,\n\t\"./AC.png\": 605,\n\t\"./AD.png\": 606,\n\t\"./AH.png\": 607,\n\t\"./AS.png\": 608,\n\t\"./BACK.png\": 609,\n\t\"./JC.png\": 610,\n\t\"./JD.png\": 611,\n\t\"./JH.png\": 612,\n\t\"./JS.png\": 613,\n\t\"./KC.png\": 614,\n\t\"./KD.png\": 615,\n\t\"./KH.png\": 616,\n\t\"./KS.png\": 617,\n\t\"./QC.png\": 618,\n\t\"./QD.png\": 619,\n\t\"./QH.png\": 620,\n\t\"./QS.png\": 621,\n\t\"./TC.png\": 622,\n\t\"./TD.png\": 623,\n\t\"./TH.png\": 624,\n\t\"./TS.png\": 625,\n\t\"./extra/aces.png\": 626,\n\t\"./extra/back.png\": 627,\n\t\"./extra/bridge-back-blue.png\": 628,\n\t\"./extra/bridge-back-gray.png\": 629,\n\t\"./extra/bridge-back-green.png\": 630,\n\t\"./extra/bridge-back-purple.png\": 631,\n\t\"./extra/bridge-back-red.png\": 632,\n\t\"./extra/bridge-back-yellow.png\": 633,\n\t\"./extra/bridge-backs.png\": 634,\n\t\"./extra/honor-clubs.png\": 635,\n\t\"./extra/honor-diamonds.png\": 636,\n\t\"./extra/honor-hearts.png\": 637,\n\t\"./extra/honor-spades.png\": 638\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 572;","var map = {\n\t\"./black.png\": 640,\n\t\"./blue.png\": 641,\n\t\"./green.png\": 642,\n\t\"./red.png\": 643,\n\t\"./white.png\": 644\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 639;","var map = {\n\t\"./burlap.png\": 646,\n\t\"./cardboard.png\": 647,\n\t\"./default-light.png\": 648,\n\t\"./default.png\": 649,\n\t\"./fabric.png\": 650,\n\t\"./felt.png\": 651,\n\t\"./leather.png\": 652,\n\t\"./noise.png\": 653,\n\t\"./paper.png\": 654,\n\t\"./pinstripe.png\": 655,\n\t\"./slate.png\": 656,\n\t\"./subtle.png\": 657,\n\t\"./suede.png\": 658,\n\t\"./twill.png\": 659\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 645;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}